import boto3
from io import BytesIO
import zipfile
import mimetypes

def lambda_handler(event, context):
    try:
        # variable declarations
        s3 = boto3.resource('s3')
        portfolio_bucket = s3.Bucket('portfolio.shrikanth.click')
        build_bucket = s3.Bucket('srajgopalan-portfoliobuild')
        
        #declare a stream of bytes for storing the file in memory
        portfolio_zip = BytesIO()
        
        # declare variables for the topic to send notifications on
        sns = boto3.resource('sns')
        # this should really be externalized
        topic = sns.Topic('arn:aws:sns:us-east-1:755216603586:deployPortfolio')
    
        # download portfolio zip generated by aws codebuild
        build_bucket.download_fileobj('portfoliobuild.zip',portfolio_zip)
        
        # iterate through objects in zipfile and upload to website bucket
        with zipfile.ZipFile(portfolio_zip) as myzip:
            for nm in myzip.namelist():
                obj = myzip.open(nm)
                portfolio_bucket.upload_fileobj(obj,nm,ExtraArgs={'ContentType': mimetypes.guess_type(nm)[0]})
                portfolio_bucket.Object(nm).Acl().put(ACL='public-read')
        
        print ("A Job Well Done!")
        topic.publish(Subject="Portfolio Deployment Success :)",Message="The portfolio was deployed to the S3 website bucket successfully!")
        print("Job well done!")
    except:
        topic.publish(Subject="Portfolio Deployment Failure :(",Message="The portfolio could not be deployed to the S3 bucket. Check the logs in CloudWatch for details")
        #raise the exception again
        raise
    
    return 'Hello from Lambda'
